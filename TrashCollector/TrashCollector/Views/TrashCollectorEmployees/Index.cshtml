@model TrashCollector.Models.EmployeeLandingPage

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<style>
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 400px;
        width: 100%
    }
</style>
<br />
<div class="jumbotron">
    <div id="map"></div>

    <script>
        var map;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 43.0343, lng: -87.9115 },
                zoom: 12
            });

            $.get("@Url.Action("GetAllLocation", "Home")", function (data, status) {
                    var marker = [];
                    var contentString = [];
                    var infowindow = [];
                    for (var i = 0; i < data.length; i++) {
                        marker[i] = new google.maps.Marker({
                            position: { lat: data[i].Lat, lng: data[i].Long },
                            map: map
                        });
                        contentString[i] = '<div id="content">' +
                            '<div id="siteNotice">' +
                            '</div>' +
                            '<div id="bodyContent">' +
                            '<h3 id="firstHeading" class="firstHeading">' + data[i].FirstName + ' ' + data[i].LastName + '</h3> ' +
                            '<p>' + data[i].Street + '</p>' +
                            '<p>' + data[i].City + '</p>' +
                            '<p>' + data[i].State + ' ' + data[i].ZipCode + '</p>';
                        infowindow[i] = new google.maps.InfoWindow({
                            content: contentString[i]
                        });
                        var markerValue = marker[i];
                        google.maps.event.addListener(marker[i], 'mouseover', (function (markerValue, i) {
                            return function () {
                                infowindow[i].open(map, marker[i]);
                            }
                        })(marker[i], i));
                        google.maps.event.addListener(marker[i], 'mouseout', (function (markerValue, i) {
                            return function () {
                                infowindow[i].close();
                            }
                        })(marker[i], i));
                        
                    }
                })
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDF3e3GTWiXubv6-LkNBxmGDUnQzoZlYzQ&callback=initMap"
            async defer></script>
</div>



<p>
    @Html.ActionLink("Create New", "Create") ||
    @Html.ActionLink("My Details", "Details", new { id = Model.TrashCollectorEmployee.Id }) ||
    @Html.ActionLink("Edit", "Edit", new { id = Model.TrashCollectorEmployee.Id }) ||
    @Html.ActionLink("Delete", "Delete", new { id = Model.TrashCollectorEmployee.Id }) ||
    @Html.ActionLink("Customers By Day", "CustomersByDayIndex", "TrashCollectorEmployees")
</p>
<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TrashCollectorEmployee)
        </th>
        <td>
            @Html.DisplayFor(model => model.TrashCollectorEmployee)
        </td>
        <th></th>
    </tr>

    @foreach (var item in Model.CustomersByZip)
    {
        <tr>
            <th>
                @Html.DisplayNameFor(Model => item.FirstName)
            </th>
            <td>
                @Html.DisplayFor(Model => item.FirstName)
            </td>
            <th>
                @Html.DisplayNameFor(Model => item.LastName)
            </th>
            <td>
                @Html.DisplayFor(Model => item.LastName)
            </td>
            <th>
                @Html.DisplayNameFor(Model => item.ZipCode)
            </th>
            <td>
                @Html.DisplayFor(Model => item.ZipCode)
            </td>
            <th>
                @Html.DisplayNameFor(Model => item.PickupStatus)
            </th>
            <td>
                @Html.DisplayFor(Model => item.PickupStatus)
            </td>
            <th>
                @Html.DisplayNameFor(Model => item.Bill)
            </th>
            <td>
                @Html.DisplayFor(Model => item.Bill)
            </td>

            <td>
                @Html.ActionLink("Edit", "RouteCustomerEdit", new { id = item.Id }) ||
                @Html.ActionLink("Details", "RouteCustomerDetails", new { id = item.Id }) ||
            </td>
        </tr>

    }

</table>
